<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jaxws="http://cxf.apache.org/jaxws" 
	xmlns:jaxrs="http://cxf.apache.org/jaxrs" 
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
    http://cxf.apache.org/jaxrs http://cxf.apache.org/schemas/jaxrs.xsd">

	<!-- 自动扫描 -->  
    <context:component-scan base-package="com.dzd" />

	<!-- proxy-target-class="false" 为jdk代理 支持interface -->
	<aop:aspectj-autoproxy proxy-target-class="false" />

	<!-- 扫描controller（controller层注入） -->
	<context:component-scan base-package="com.dzd.phonebook.controller" />
	
	<import resource="classpath:META-INF/cxf/cxf.xml" />
	<import resource="classpath:META-INF/cxf/cxf-servlet.xml" />
	
	
	<bean id="memberStatistics" class="com.dzd.phonebook.interfaces.impl.MemberStatisticsServiceImpl" />
	
	<!-- 这里的地址很重要，客户端需要通过这个地址来访问WebService -->
	 <jaxrs:server id="restServiceContainer" address="/aip">
		<jaxrs:serviceBeans>
			<ref bean="memberStatistics" />
		</jaxrs:serviceBeans>
		<jaxrs:extensionMappings>
			<entry key="json" value="application/json" />
			<entry key="xml" value="application/xml" />
		</jaxrs:extensionMappings>
		<jaxrs:languageMappings>
			<entry key="en" value="en-gb" />
		</jaxrs:languageMappings>
	</jaxrs:server> 
	
	
	
	<!-- 避免IE在ajax请求时，返回json出现下载 -->
	<bean id="jacksonMessageConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="stringConverter"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/plain;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	
	
		<!-- 上传配置 -->
	<bean id="multipartResolver"
		  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的大小为100M ,编码为utf-8 -->
		<property name="maxUploadSize" value="100000000" />
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxInMemorySize">
			<value>1638400</value>
		</property>
	</bean>
	
	
	<!-- 输出对象转JSON支持 -->
	<bean id="jsonConverter"
		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"></bean>
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="stringConverter" />
				<ref bean="jsonConverter" />
			</list>
		</property>
	</bean>

	<!-- 对模型视图添加前后缀 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/view/" p:suffix=".jsp" />

 
	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<!-- 进行拦截的请求路径 -->
			<mvc:mapping path="/welcome.do" />
			<mvc:mapping path="/*/*" />
			<mvc:exclude-mapping path="/loginview.do"/>
			<mvc:exclude-mapping path="/smsUser/getVertifyCode.do"/>
			<mvc:exclude-mapping path="/smsUser/updatePwd.do"/>
			<mvc:exclude-mapping path="/zixun/*"/>
			<mvc:exclude-mapping path="/smsUser/getVertifyCodeByFeedBack.do"/>
			<mvc:exclude-mapping path="/smsVertifyCode/getSmsVertifyCode.do"/>
			<mvc:exclude-mapping path="/test/*"/>
			<!-- 定义在mvc:interceptor下面的表示是对特定的请求才进行拦截的 -->
			<bean class="com.dzd.base.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>
	
</beans>